name: ScanCode FOSS License Scan

on: [push, pull_request]

jobs:
  license-scan:
    runs-on: ubuntu-latest

    steps:
    # Checkout repo
    - name: Checkout code
      uses: actions/checkout@v4

    # Set up Python
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    # Install ScanCode Toolkit
    - name: Install ScanCode Toolkit
      run: |
        git clone https://github.com/nexB/scancode-toolkit.git
        pip install -e ./scancode-toolkit

    # Run ScanCode
    - name: Run ScanCode on current project
      run: |
        scancode-toolkit/scancode --json-pp scan-output.json .

    # Extract and print detected licenses
    - name: Show detected licenses
      run: |
        echo " Detected licenses:"
        jq -r '.license_detections[].license_expression' scan-output.json || echo "No licenses found"

    # Fail build if risky licenses (like GPL or AGPL) found
    - name: Check for risky licenses
      run: |
        echo " Checking for risky licenses..."
        jq -r '.license_detections[].license_expression' scan-output.json > detected-licenses.txt
        if grep -Ei 'gpl|agpl' detected-licenses.txt; then
          echo " Risky license found: GPL/AGPL"
          exit 1
        else
          echo " No risky licenses found"
        fi

    # Detect permissive+GPL dual-licensed files
    - name: Check for dual-licensed files (MIT OR GPL, etc.)
      run: |
        echo " Checking for dual-licensed files (e.g., MIT OR GPL)..."
        matches=$(jq -r '
          .files[] 
          | select(.license_expression != null)
          | .license_expression
          | gsub("[()\"]"; "") 
          | split(" and | AND | or | OR ") 
          | map(ascii_downcase | ltrimstr(" ") | rtrimstr(" ")) as $licenses
          | if (["mit", "bsd", "apache-2.0"] | any(. as $p | $licenses[] | contains($p))) 
             and ($licenses[] | contains("gpl")) 
            then 1 else empty end
        ' scan-output.json)

        if [ -n "$matches" ]; then
          echo " Found permissive+GPL dual-licensed file(s)"
          exit 1
        else
          echo " No permissive+GPL dual-licensed files found"
        fi
