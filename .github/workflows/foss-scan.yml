name: FOSS License Scan

on:
  push:
    branches: [main]
  pull_request:

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies and GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y git python3 python3-pip jq gh

      - name: Clone and configure ScanCode Toolkit
        run: |
          git clone https://github.com/nexB/scancode-toolkit.git
          cd scancode-toolkit
          ./configure

      - name: Clean old scan output
        run: rm -f scan-output.json      

      - name: Run ScanCode license scan
        run: |
          cd scancode-toolkit
          ./scancode \
          --license \
          --json-pp ../scan-output.json \
          ../src/uuid/src

      - name: Detect dual-licensed files with permissive and GPL
        run: |
          echo "üîç Checking for dual-licensed files (e.g., MIT OR GPL)..."
          
          RISKY="gpl agpl lgpl"
          PERMISSIVE="mit bsd apache isc"
          
          MATCHED=0
          
          jq -r '.files[] | select(.license_expression != null) | "\(.path) \(.license_expression)"' scan-output.json |
          while read -r path license_expr; do
            expr_lower=$(echo "$license_expr" | tr '[:upper:]' '[:lower:]')
            
            # Only consider OR expressions
            if [[ "$expr_lower" == *" or "* ]]; then
              for risky in $RISKY; do
                if [[ "$expr_lower" == *"$risky"* ]]; then
                  for perm in $PERMISSIVE; do
                    if [[ "$expr_lower" == *"$perm"* ]]; then
                      echo "‚ÑπÔ∏è  Dual-licensed file: $path"
                      echo "   ‚Üí License Expression: $license_expr"
                      MATCHED=1
                      break
                    fi
                  done
                fi
              done
            fi
          done
          
          if [[ "$MATCHED" -eq 0 ]]; then
            echo "‚úÖ No permissive+GPL dual-licensed files found."
          fi

      - name: Fail build on risky licenses
        run: |
          jq -r '.license_detections[].license_expression' scan-output.json > detected-licenses.txt
          echo "‚úÖ Detected licenses:"
          cat detected-licenses.txt

          risky=("gpl" "gpl-2.0" "gpl-3.0" "agpl" "agpl-3.0" "lgpl" "lgpl-2.1" "lgpl-3.0")
          for license in "${risky[@]}"; do
            if grep -i -q "$license" detected-licenses.txt; then
              echo "::error::‚ùå Risky license found: $license"
              exit 1
            fi
          done

          echo "‚úÖ No risky licenses found."

      - name: Generate SPDX and CycloneDX SBOMs
        run: |
          cd scancode-toolkit
          ./scancode \
            --spdx-tv ../scan-output.spdx \
            --cyclonedx ../scan-output.cyclonedx.json \
            ../src/uuid/src


      - name: Upload all scan artifacts
        uses: actions/upload-artifact@v4
        with:
          name: foss-scan-reports
          path: |
            scan-output.json
            scan-output.spdx
            scan-output.cyclonedx.json
